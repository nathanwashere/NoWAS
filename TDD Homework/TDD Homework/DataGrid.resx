<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        eMsZccEkkasFjTZOXikkklo1n//Z
</value>
  </data>
</root>